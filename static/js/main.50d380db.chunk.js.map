{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css"],"names":["ContactForm","state","name","number","uuid","handleOnSubmit","e","preventDefault","obj","id","props","contacts","some","element","toLocaleLowerCase","alert","addNewCntacts","resetForm","handleOnChange","setState","target","value","onSubmit","this","className","styles","form","htmlFor","label","formInput","type","pattern","title","required","onChange","Component","Filter","filter","handleOnChangefilter","ContactItem","contactName","contactDeleteBtn","onClick","deleteContact","ContactList","contactList","map","contact","contactListItem","App","prevState","contactsFilter","includes","filteredContacts","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.50d380db.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport styles from 'components/ContactForm/ContactForm.module.css';\r\n\r\nexport class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n  name = uuid();\r\n  number = uuid();\r\n\r\n  handleOnSubmit = e => {\r\n    e.preventDefault();\r\n    const obj = {\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n      id: uuid(),\r\n    };\r\n    const existedContact = this.props.contacts.some(\r\n      element =>\r\n        element.name.toLocaleLowerCase() === obj.name.toLocaleLowerCase(),\r\n    );\r\n    //  this.props.newExistedContact(obj);\r\n\r\n    if (existedContact) {\r\n      return alert(`${obj.name} is already in the contact list`);\r\n    }\r\n    this.props.addNewCntacts(obj);\r\n    this.resetForm();\r\n  };\r\n\r\n  handleOnChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleOnSubmit} className={styles.form}>\r\n        <label htmlFor={this.name} className={styles.label}>\r\n          Name\r\n        </label>\r\n        <br />\r\n        <input\r\n          className={styles.formInput}\r\n          id={this.name}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={this.state.name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={this.handleOnChange}\r\n        />\r\n        <br />\r\n        <label htmlFor={this.number} className={styles.label}>\r\n          Number\r\n        </label>\r\n        <br />\r\n        <input\r\n          className={styles.formInput}\r\n          id={this.number}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={this.state.number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={this.handleOnChange}\r\n        />\r\n        <br />\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  contacts: PropTypes.array,\r\n  addNewCntacts: PropTypes.func,\r\n};\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nexport class Filter extends Component {\r\n  filter = uuid();\r\n  render() {\r\n    return (\r\n      <>\r\n        <label htmlFor={this.filter}>Find contacts by name</label>\r\n        <br />\r\n        <input\r\n          id={this.filter}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          onChange={this.props.handleOnChangefilter}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nFilter.propTypes = {\r\n  contacts: PropTypes.array,\r\n  filter: PropTypes.func,\r\n  handleOnChangefilter: PropTypes.func,\r\n};\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from 'components/ContactList/ContactList.module.css';\r\n\r\nexport class ContactItem extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <span className={styles.contactName}>{this.props.name}:</span>\r\n        <span> {this.props.number}</span>\r\n        <button\r\n          className={styles.contactDeleteBtn}\r\n          type=\"button\"\r\n          id={this.props.id}\r\n          onClick={() => {\r\n            this.props.deleteContact(this.props.id);\r\n          }}\r\n        >\r\n          Delete\r\n        </button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nContactItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  deleteContact: PropTypes.func,\r\n};\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { ContactItem } from 'components/ContactList/ContactItem';\r\nimport styles from 'components/ContactList/ContactList.module.css';\r\n\r\nexport class ContactList extends Component {\r\n  render() {\r\n    return (\r\n      <ul className={styles.contactList}>\r\n        {this.props.contacts.map(contact => (\r\n          <li key={contact.id} className={styles.contactListItem}>\r\n            <ContactItem\r\n              id={contact.id}\r\n              name={contact.name}\r\n              number={contact.number}\r\n              deleteContact={this.props.deleteContact}\r\n            />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  deleteContact: PropTypes.func,\r\n};\r\n","import './App.css';\r\nimport { Component } from 'react';\r\n\r\nimport { ContactForm } from 'components/ContactForm/ContactForm';\r\nimport { Filter } from 'components/Filter/Filter';\r\nimport { ContactList } from 'components/ContactList/ContactList';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  // форма\r\n  addNewCntacts = obj => {\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: [...prevState.contacts, obj],\r\n      };\r\n    });\r\n  };\r\n\r\n  //фільтр\r\n\r\n  handleOnChangefilter = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  contactsFilter = () => {\r\n    const { contacts, filter } = this.state;\r\n    return contacts.filter(contact =>\r\n      contact.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase()),\r\n    );\r\n  };\r\n\r\n  // видалення контакту\r\n\r\n  deleteContact = id => {\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: prevState.contacts.filter(contact => contact.id !== id),\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const filteredContacts = this.contactsFilter();\r\n    const { contacts, filter } = this.state.contacts;\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Phonebook</h1>\r\n        <ContactForm\r\n          addNewCntacts={this.addNewCntacts}\r\n          contacts={this.state.contacts}\r\n        />\r\n        <div className=\"contacts-wrapper\">\r\n          <h2 className=\"contacts-title\">Contacts</h2>\r\n          <Filter\r\n            contacts={contacts}\r\n            filter={filter}\r\n            handleOnChangefilter={this.handleOnChangefilter}\r\n          />\r\n          <ContactList\r\n            contacts={filteredContacts}\r\n            deleteContact={this.deleteContact}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__U-cDW\",\"contactListItem\":\"ContactList_contactListItem__3sCUC\",\"contactDeleteBtn\":\"ContactList_contactDeleteBtn__1ItYM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1JjRK\",\"label\":\"ContactForm_label__3BVBJ\",\"formInput\":\"ContactForm_formInput__1ppiN\"};"],"sourceRoot":""}